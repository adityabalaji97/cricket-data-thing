#!/usr/bin/env python3\n\"\"\"\nQuick test script to verify the new ELO endpoints are working\n\"\"\"\n\nimport requests\nimport json\nfrom datetime import date, timedelta\n\n# Configuration\nBASE_URL = \"http://localhost:8000\"  # Adjust if your API runs on a different port\n\ndef test_elo_rankings():\n    \"\"\"Test the ELO rankings endpoint\"\"\"\n    print(\"Testing ELO Rankings Endpoint...\")\n    \n    # Test international teams\n    url = f\"{BASE_URL}/teams/elo-rankings\"\n    params = {\n        \"include_international\": True,\n        \"top_teams\": 10\n    }\n    \n    try:\n        response = requests.get(url, params=params)\n        print(f\"Status Code: {response.status_code}\")\n        \n        if response.status_code == 200:\n            data = response.json()\n            print(f\"Total teams found: {data.get('total_teams', 0)}\")\n            \n            rankings = data.get('rankings', [])\n            if rankings:\n                print(\"\\nTop 5 teams:\")\n                for i, team in enumerate(rankings[:5]):\n                    print(f\"{team['rank']}. {team['team_abbreviation']} ({team['team_name']}) - ELO: {team['current_elo']}\")\n            else:\n                print(\"No rankings found\")\n        else:\n            print(f\"Error: {response.text}\")\n            \n    except requests.exceptions.ConnectionError:\n        print(\"Error: Could not connect to API. Make sure the server is running.\")\n    except Exception as e:\n        print(f\"Error: {e}\")\n\ndef test_elo_history():\n    \"\"\"Test the ELO history endpoint\"\"\"\n    print(\"\\nTesting ELO History Endpoint...\")\n    \n    url = f\"{BASE_URL}/teams/elo-history\"\n    \n    # Test with a few common teams\n    teams = [\"India\", \"Australia\", \"England\"]\n    start_date = (date.today() - timedelta(days=365)).isoformat()  # Last year\n    end_date = date.today().isoformat()\n    \n    params = {\n        \"teams\": teams,\n        \"start_date\": start_date,\n        \"end_date\": end_date\n    }\n    \n    try:\n        response = requests.get(url, params=params)\n        print(f\"Status Code: {response.status_code}\")\n        \n        if response.status_code == 200:\n            data = response.json()\n            print(f\"Teams requested: {data.get('teams_requested', [])}\")\n            print(f\"Teams found: {data.get('teams_found', [])}\")\n            \n            elo_histories = data.get('elo_histories', {})\n            for team, history in elo_histories.items():\n                print(f\"\\n{team}: {len(history)} data points\")\n                if history:\n                    latest = history[-1]\n                    print(f\"  Latest ELO: {latest['elo']} on {latest['date']}\")\n        else:\n            print(f\"Error: {response.text}\")\n            \n    except requests.exceptions.ConnectionError:\n        print(\"Error: Could not connect to API. Make sure the server is running.\")\n    except Exception as e:\n        print(f\"Error: {e}\")\n\ndef test_league_rankings():\n    \"\"\"Test ELO rankings for a specific league\"\"\"\n    print(\"\\nTesting League-specific ELO Rankings...\")\n    \n    url = f\"{BASE_URL}/teams/elo-rankings\"\n    params = {\n        \"league\": \"Indian Premier League\",\n        \"include_international\": False\n    }\n    \n    try:\n        response = requests.get(url, params=params)\n        print(f\"Status Code: {response.status_code}\")\n        \n        if response.status_code == 200:\n            data = response.json()\n            print(f\"IPL teams found: {data.get('total_teams', 0)}\")\n            \n            rankings = data.get('rankings', [])\n            if rankings:\n                print(\"\\nTop 5 IPL teams:\")\n                for i, team in enumerate(rankings[:5]):\n                    print(f\"{team['rank']}. {team['team_abbreviation']} - ELO: {team['current_elo']}\")\n        else:\n            print(f\"Error: {response.text}\")\n            \n    except requests.exceptions.ConnectionError:\n        print(\"Error: Could not connect to API. Make sure the server is running.\")\n    except Exception as e:\n        print(f\"Error: {e}\")\n\nif __name__ == \"__main__\":\n    print(\"=\" * 50)\n    print(\"ELO ENDPOINTS TEST\")\n    print(\"=\" * 50)\n    \n    test_elo_rankings()\n    test_elo_history() \n    test_league_rankings()\n    \n    print(\"\\n\" + \"=\" * 50)\n    print(\"Test completed!\")\n    print(\"=\" * 50)