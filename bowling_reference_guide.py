#!/usr/bin/env python3
"""
Bowling Reference Guide

This file contains reference information for bowling types, hands, and styles
to help with manual data entry for bowler information.

Use this as a reference when filling out the CSV files generated by analyze_bowler_data.py
"""

# Bowling Hand Classifications
BOWL_HAND_OPTIONS = {
    'R': 'Right-arm',
    'L': 'Left-arm'
}

# Bowling Type Classifications (Detailed)
BOWL_TYPE_OPTIONS = {
    # Fast Bowling
    'RF': 'Right-arm Fast',
    'LF': 'Left-arm Fast', 
    'RFM': 'Right-arm Fast Medium',
    'LFM': 'Left-arm Fast Medium',
    'RM': 'Right-arm Medium',
    'LM': 'Left-arm Medium',
    'RMF': 'Right-arm Medium Fast',
    'LMF': 'Left-arm Medium Fast',
    
    # Spin Bowling
    'ROB': 'Right-arm Off Break',
    'LOB': 'Left-arm Off Break',
    'RLB': 'Right-arm Leg Break',
    'LLB': 'Left-arm Leg Break',
    'SLA': 'Slow Left-arm Orthodox',
    'SLAC': 'Slow Left-arm Chinaman',
    'OB': 'Off Break',
    'LB': 'Leg Break',
    'OS': 'Off Spin',
    'LS': 'Leg Spin',
    
    # Unconventional
    'RU': 'Right-arm Unorthodox',
    'LU': 'Left-arm Unorthodox'
}

# Bowler Type Classifications (Primary Categories)
BOWLER_TYPE_OPTIONS = {
    'Fast': 'Fast Bowler (>140 kmph typically)',
    'Fast Medium': 'Fast Medium Bowler (130-140 kmph)',
    'Medium': 'Medium Pace Bowler (120-130 kmph)',
    'Medium Fast': 'Medium Fast Bowler (130-140 kmph)',
    'Spin': 'Spin Bowler (all spin types)',
    'Off Spin': 'Off Spin Bowler',
    'Leg Spin': 'Leg Spin Bowler', 
    'Left-arm Orthodox': 'Left-arm Orthodox Spinner',
    'Chinaman': 'Left-arm Unorthodox (Chinaman)',
    'Part-time': 'Part-time Bowler'
}

# Common combinations and examples
COMMON_COMBINATIONS = {
    'Virat Kohli': {'bowler_type': 'Part-time', 'bowl_hand': 'R', 'bowl_type': 'RM'},
    'Jasprit Bumrah': {'bowler_type': 'Fast', 'bowl_hand': 'R', 'bowl_type': 'RF'},
    'Ravindra Jadeja': {'bowler_type': 'Left-arm Orthodox', 'bowl_hand': 'L', 'bowl_type': 'SLA'},
    'Yuzvendra Chahal': {'bowler_type': 'Leg Spin', 'bowl_hand': 'R', 'bowl_type': 'RLB'},
    'Trent Boult': {'bowler_type': 'Fast', 'bowl_hand': 'L', 'bowl_type': 'LF'},
    'Rashid Khan': {'bowler_type': 'Leg Spin', 'bowl_hand': 'R', 'bowl_type': 'RLB'},
    'Mitchell Starc': {'bowler_type': 'Fast', 'bowl_hand': 'L', 'bowl_type': 'LF'},
    'R Ashwin': {'bowler_type': 'Off Spin', 'bowl_hand': 'R', 'bowl_type': 'ROB'}
}

def print_bowling_reference():
    """Print bowling reference guide."""
    print("üèè BOWLING REFERENCE GUIDE")
    print("="*60)
    
    print("\nüìã BOWL_HAND Options:")
    for code, description in BOWL_HAND_OPTIONS.items():
        print(f"   {code:<3} - {description}")
    
    print("\nüìã BOWLER_TYPE Options:")
    for bowler_type, description in BOWLER_TYPE_OPTIONS.items():
        print(f"   {bowler_type:<18} - {description}")
    
    print("\nüìã BOWL_TYPE Options (Detailed Codes):")
    
    print("\n   Fast Bowling:")
    fast_types = {k: v for k, v in BOWL_TYPE_OPTIONS.items() if 'Fast' in v or 'Medium' in v}
    for code, description in fast_types.items():
        print(f"     {code:<4} - {description}")
    
    print("\n   Spin Bowling:")
    spin_types = {k: v for k, v in BOWL_TYPE_OPTIONS.items() if 'Spin' in v or 'Break' in v or 'Orthodox' in v}
    for code, description in spin_types.items():
        print(f"     {code:<4} - {description}")
    
    print("\nüìã Example Combinations:")
    for player, info in COMMON_COMBINATIONS.items():
        print(f"   {player:<18}: {info['bowler_type']:<18} | {info['bowl_hand']} | {info['bowl_type']}")
    
    print("\nüí° Tips for Manual Entry:")
    print("   ‚Ä¢ Most pace bowlers: bowler_type='Fast'/'Medium', bowl_type='RF'/'LF'/'RM'")
    print("   ‚Ä¢ Most spinners: bowler_type='Off Spin'/'Leg Spin', bowl_type='ROB'/'RLB'/'SLA'")
    print("   ‚Ä¢ Part-time bowlers: usually 'Part-time' + their natural bowling action")
    print("   ‚Ä¢ When in doubt, check cricinfo or similar sources for the player")
    
    print("\nüîç Common Patterns:")
    print("   ‚Ä¢ Fast bowlers usually RF/LF (right/left-arm fast)")
    print("   ‚Ä¢ Off spinners usually ROB (right-arm off break)")
    print("   ‚Ä¢ Leg spinners usually RLB (right-arm leg break)")
    print("   ‚Ä¢ Left-arm orthodox usually SLA (slow left-arm)")
    print("   ‚Ä¢ Left-arm fast bowlers often swing specialists")


def get_suggestions_for_bowler(bowler_name: str) -> dict:
    """Get suggestions for a specific bowler if they're well-known."""
    # Check if we have predefined data
    if bowler_name in COMMON_COMBINATIONS:
        return COMMON_COMBINATIONS[bowler_name]
    
    # Simple heuristics based on name patterns (very basic)
    suggestions = {}
    
    # This is a very basic suggestion system
    # In practice, you'd want to look up actual bowling data
    if any(name in bowler_name.lower() for name in ['bumrah', 'boult', 'starc', 'rabada']):
        suggestions = {'bowler_type': 'Fast', 'bowl_hand': 'R', 'bowl_type': 'RF'}
    elif any(name in bowler_name.lower() for name in ['chahal', 'rashid', 'zampa']):
        suggestions = {'bowler_type': 'Leg Spin', 'bowl_hand': 'R', 'bowl_type': 'RLB'}
    elif any(name in bowler_name.lower() for name in ['ashwin', 'harbhajan']):
        suggestions = {'bowler_type': 'Off Spin', 'bowl_hand': 'R', 'bowl_type': 'ROB'}
    elif any(name in bowler_name.lower() for name in ['jadeja', 'axar']):
        suggestions = {'bowler_type': 'Left-arm Orthodox', 'bowl_hand': 'L', 'bowl_type': 'SLA'}
    
    return suggestions


def interactive_bowler_lookup():
    """Interactive tool for looking up bowling suggestions."""
    print("\nüîç Interactive Bowler Lookup Tool")
    print("="*40)
    
    while True:
        bowler_name = input("\nEnter bowler name (or 'quit' to exit): ").strip()
        
        if bowler_name.lower() in ['quit', 'exit', 'q']:
            break
        
        if not bowler_name:
            continue
        
        suggestions = get_suggestions_for_bowler(bowler_name)
        
        if suggestions:
            print(f"\nüí° Suggestions for {bowler_name}:")
            print(f"   ‚Ä¢ bowler_type: {suggestions.get('bowler_type', 'Unknown')}")
            print(f"   ‚Ä¢ bowl_hand: {suggestions.get('bowl_hand', 'Unknown')}")
            print(f"   ‚Ä¢ bowl_type: {suggestions.get('bowl_type', 'Unknown')}")
        else:
            print(f"\n‚ùì No specific suggestions for {bowler_name}")
            print("   Please refer to the bowling reference guide above.")


if __name__ == "__main__":
    print_bowling_reference()
    
    print("\n" + "="*60)
    choice = input("\nWould you like to use the interactive lookup tool? (y/n): ").strip().lower()
    
    if choice == 'y':
        interactive_bowler_lookup()
    
    print("\n‚úÖ Reference guide complete!")
